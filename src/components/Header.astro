<header class="header">
  <div class="header__container">
    <a href="/" class="header__logo">evoa</a>
    <nav class="header__nav" data-menu>
      <div class="nav-indicator"></div>
      <a href="#about" class="header__nav-link">о студии1</a>
      <a href="#steps" class="header__nav-link">этапы работы</a>
      <a href="#options" class="header__nav-link">услуги</a>
      <a href="#cases" class="header__nav-link">кейсы</a>
      <a href="#contacts" class="header__nav-link">контакты</a>
      <img src="./img/header-nav.svg" class="header__nav-img" alt="" />
    </nav>
  </div>
  <div class="burger" data-burger>
    <span>меню</span>
  </div>
</header>
<script>
  import type { addIssueToContext } from "astro:schema";
import gsap from "gsap";

  const burgerMenu = document.querySelector("[data-burger]");
  const headerNav = document.querySelector("[data-menu]");
  const burgerText = burgerMenu?.querySelector("span");
  const navLinks = document.querySelectorAll(".header__nav > a");

  let isMenuOpen = false;

  burgerMenu?.addEventListener("click", () => {
    isMenuOpen = !isMenuOpen;
    headerNav?.classList.toggle("menu-open");
    document.body.classList.toggle('body--fixed')
    // Меняем текст "меню" / "закрыть" с анимацией
    if (burgerText) {
      gsap.to(burgerText, {
        duration: 0.3,
        opacity: 0,
        y: -20,
        onComplete: () => {
          burgerText.textContent = isMenuOpen ? "закрыть" : "меню";
          gsap.fromTo(
            burgerText,
            { opacity: 0, y: 20 },
            { opacity: 1, y: 0, duration: 0.3 }
          );
        },
      });
    }
  });
  const indicator = document.querySelector(".nav-indicator") as HTMLElement;
const links = document.querySelectorAll(".header__nav-link");

links.forEach(link => {
  link.addEventListener("mouseenter", () => {
    const rect = link.getBoundingClientRect();
    const nav = link.closest(".header__nav");

    if (!nav || !indicator) return; // Защита от null

    const navRect = nav.getBoundingClientRect();
    const offsetLeft = rect.left - navRect.left + (rect.width / 2) - 5;

    indicator.style.opacity = "1";
    indicator.style.transform = `translateX(${offsetLeft}px)`;
  });

  link.addEventListener("mouseleave", () => {
   
    if (indicator) indicator.style.opacity = "0";
  });
  window.addEventListener('scroll', ()=>{
    if(window.scrollY >= 100){
      document.querySelector('.header')?.classList.add('scrolling')
    } else {
      document.querySelector('.header')?.classList.remove('scrolling')

    }
  })
})
</script>

<style>
  .header {
    position: fixed;
    left: 0;
    width: 100%;
    top: 0;
    padding: 30px var(--container-padding);
    z-index: 10;
  }
  .scrolling {
    backdrop-filter: blur(12px);
  background-color: rgba(255, 255, 255, 0.6); 
  border-bottom: 1px solid rgba(0, 0, 0, 0.05); 
  }
  .header__container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* padding-right: 600px; */
  }
  .header__logo {
    font-weight: 500;
    font-size: 30px;
    color: var(--color-black);
  }

  .header__nav {
    display: flex;
    align-items: center;
    gap: 50px;
    margin: 0 auto;
    position: relative;
  }

  .nav-indicator {
  position: absolute;
  bottom: -15px;
  height: 8px;
  width: 8px;
  border-radius: 50%;
  background-color: var(--color-black);
  transition: all 0.5s ease;
  transform: translateX(0);
  opacity: 0;
  pointer-events: none;
}
  .header__nav-img {
    display: none;
  }
  .header__nav-link {
    font-weight: 400;
    font-size: clamp(14px, 3vw, 20px);
    color: var(--color-black);
  }

  @media (max-width: 1350px) {
    .header__container {
      padding-right: 0;
    }
  }

  @media (max-width: 868px) {
    .header__nav {
      gap: 15px;
    }
  }
  .burger {
    display: none;
  }
  @media (max-width: 800px) {
    .header{
      padding: 13px;
    }
    .header__nav {
      position: fixed;
      flex-direction: column;
      height: 100vh;
      left: 0;
      top: -100dvh;
      opacity: 0;
      visibility: hidden;
      width: 100vw;
      overflow: hidden;
      transition: top .8s ease,
      opacity .5s ease,
      visibility .5s ease;
      transform-origin: center center;
      z-index: 10;
      align-items: start;
      padding-top: 18vh;
      background-color: var(--color-white);
      gap: 10px;    
      padding-left: 20px;
      min-width: 375px;
    }
    
    .header__nav a{
      font-weight: 400;
      font-size: clamp(40px, 10vw, 70px);
      color: var(--color-black);
      opacity: 0;
      transition: all .8s ease;
      transition-delay: .5s;
    }
    @media (orientation: landscape){
      .header__nav a{
        font-size: 40px;
      }
    }
    .header__nav-link:nth-child(1){
      transform: translateY(-20px);
    }
    .header__nav-link:nth-child(2){
      transform: translateY(-60px);
    }
    .header__nav-link:nth-child(3){
      transform: translateY(-120px);
    }
    .header__nav-link:nth-child(4){
      transform: translateY(-180px);
    }
    .header__nav-link:nth-child(5){
      transform: translateY(-240px);
    }
    .header__nav-link:nth-child(6){
      transform: translateY(-300px);
    }

   .menu-open .header__nav-link{
    opacity: 1;
    transform: translateY(0);
   }

    .header__nav-img{
      position: absolute;
      bottom: 0;
      display: block;
      right: 0px;
      width: 120%;
      opacity: 0;
      height: 110%;
      transition: all 2s ease;
      transition-delay: .5s;
    }

    .menu-open  .header__nav-img{
      opacity: 1;
    }
    .burger {
      display: block;
      position: fixed;
      right: 10px;
      top: 15px;
      font-weight: 400;
      font-size: 20px;
      color: var(--color-black);
      z-index: 15;
    }
    .menu-open {
      top: 0;
      opacity: 1;
      visibility: visible;
    }
  }
</style>
